/**
 * Utilidad interna que devuelve el primer valor, y en caso de ser nulo, el segundo.
 * @param {*} cadena
 * @param {*} valorSiNulo
 */
function coalesce(cadena, valorSiNulo) {
  return cadena ? cadena : valorSiNulo;
}

export const sigupForm = (callback) => {
  console.log("aqui entra");
  // sigupForm.addEventListener('submit', (e) => {
  //  e.preventDefault();

  const sigupEmail = document.querySelector("#email").value;
  const sigupPassword = document.querySelector("#password").value;

  console.log(sigupEmail, sigupPassword);

  firebase
    .auth()
    .createUserWithEmailAndPassword(sigupEmail, sigupPassword)
    .then(() => {
      //sigupForm.reset();
      callback();
      console.log(callback);
    })
    .catch((error) => {
      const codigoerror = error.code;

      if (codigoerror === "auth/email-already-in-use") {
        alert(
          "El Correo electronico " + sigupEmail + " ya se encuentra registrado"
        );
        alert("Intente iniciar sesion con un correo registrado");
        console.log(
          "El Correo electronico " + sigupEmail + " ya se encuentra registrado"
        );
      } else {
        //aqui va todo lo relacionado con error del usuario, por loq ue cambie el ms de te conectaste
        alert("Intente ingresar datos");
      }
      console.log(error);
      //if (userCredential = true)  {
      //console.log('te conectaste guachita')

      // }else {
      //     console.log('no estas registrado')
      //}
    });
};

export const inicioGoogle = (callback) => {
  const provider = new firebase.auth.GoogleAuthProvider();
  firebase
    .auth()
    .signInWithPopup(provider)
    .then((result) => {
      // This gives you a Google Access Token. You can use it to access the Google API.
      //const token = result.credential.accessToken;
      // The signed-in user info.
      //const user = result.user;
      console.log(result.user);
      callback();
    })
    .catch((error) => {
      // Handle Errors here.
      const errorCode = error.code;
      //const errorMessage = error.message;
      // The email of the user's account used.
      //const email = error.email;
      // The firebase.auth.AuthCredential type that was used.
      //const credential = error.credential;
      // if (errorCode === 'auth/wrong-password') {
      //  alert('Contraseña erronea.');
      //}
      //     console.log(error);
      //    console.log('error',errorMessage)

      /* auth.signInWithPopup(provider)
      .then(result => {
          console.log('inicio con google')
     })
     .catch(err => {
         console.log(err)
      })
  */
    });
};

//loguerase, esto lo llamaremos depsues en el template logearse
//export const signIn = () => {
export const signIn = (callback) => {
  console.log("estamos en funcion SingIn");

  const email = document.querySelector("#email").value;
  const password = document.querySelector("#password").value;
  console.log(email, password);

  firebase
    .auth()
    .signInWithEmailAndPassword(email, password)
    .then(() => {
      callback();
    })
    .catch((error) => {
      const errorCode = error.code;

      if (errorCode === "auth/wrong-password" || "auth/invalid-email") {
        alert("Revisa tus datos.");
      } else {
        alert("¡Ingrese un correo valido!");
      }
      console.log(error);
    });
};

export const post = (inputPosts) => {
  const db = firebase.firestore();
  const usuario = () => firebase.auth().currentUser;
  const user = usuario();
  // Add a second document with a generated ID.
  db.collection("post")
    .add({
      email: user.email,
      nombre: user.displayName,
      post: inputPosts,
      uid: user.uid,
    })
    .then(function (docRef) {
      console.log("Document written with ID: ", docRef.id);
    })
    .catch(function (error) {
      console.error("Error adding document: ", error);
    });
};

export const leeme = () => {
  console.log("entra aqui");
  const svgComentario =
    '<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.04174 0C9.03683 0.00482273 9.027 0.00482273 9.01227 0.00482273C4.04202 0.00482273 0 3.97393 0 8.85454C0 10.8463 0.692496 12.7802 1.95962 14.338L0.648294 17.3281C0.540245 17.574 0.658117 17.8586 0.903683 17.9599C0.992086 17.9984 1.09031 18.0081 1.18363 17.9936L5.99181 17.1641C6.95443 17.5065 7.96616 17.6801 8.98771 17.6753C13.958 17.6753 18 13.7062 18 8.8256C18.0098 3.95946 13.9973 0.00482273 9.04174 0ZM8.99262 16.7156C8.04474 16.7156 7.10668 16.5468 6.21773 16.2188C6.13424 16.1851 6.04583 16.1803 5.95743 16.1947L1.9105 16.8892L2.98117 14.4441C3.05484 14.2753 3.02537 14.0776 2.90259 13.9377C2.32305 13.277 1.86139 12.5246 1.53724 11.7096C1.17381 10.7981 0.987175 9.82873 0.987175 8.84971C0.987175 4.49961 4.59208 0.964546 9.01718 0.964546C13.4325 0.954901 17.0177 4.46103 17.0226 8.79666C17.0226 8.80631 17.0226 8.81595 17.0226 8.8256C17.0226 13.1805 13.4177 16.7156 8.99262 16.7156Z" fill="#2B2B2B"/></svg>';
  const svgLike =
    '<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M18 10.7609C18 10.2905 17.8207 9.85226 17.5117 9.52903C17.862 9.12913 18.0405 8.59302 17.9917 8.03504C17.904 7.04033 17.0452 6.26085 16.0357 6.26085H11.403C11.6325 5.5338 12 4.20104 12 3.13043C12 1.43295 10.6178 0 9.74999 0C8.97149 0 8.41423 0.457827 8.39099 0.476609C8.30173 0.550969 8.24998 0.663665 8.24998 0.782597V3.43641L6.08924 8.31913L5.99998 8.36686V8.21737C5.99998 8.00136 5.83196 7.82605 5.62496 7.82605H1.87499C0.840762 7.82608 0 8.7034 0 9.7826V16.0435C0 17.1227 0.840762 18 1.87499 18H4.12499C4.93573 18 5.62873 17.46 5.88973 16.7063C6.51375 17.0413 7.35374 17.2174 7.875 17.2174H14.7593C15.576 17.2174 16.2908 16.643 16.4587 15.851C16.545 15.4424 16.4948 15.0316 16.3237 14.6747C16.8773 14.3843 17.25 13.7872 17.25 13.1087C17.25 12.8317 17.1893 12.5664 17.0745 12.3269C17.628 12.0357 18 11.4394 18 10.7609ZM16.4182 11.7266C16.2735 11.7446 16.1512 11.8471 16.1048 11.9919C16.059 12.1367 16.0973 12.2955 16.2038 12.4004C16.3943 12.5875 16.5 12.8395 16.5 13.1087C16.5 13.6025 16.1423 14.0173 15.669 14.0744C15.5243 14.0924 15.402 14.1949 15.3555 14.3397C15.3098 14.4845 15.3481 14.6434 15.4545 14.7483C15.7013 14.9909 15.8003 15.3313 15.7261 15.6819C15.6338 16.1186 15.2273 16.4348 14.7593 16.4348H7.875C7.26599 16.4348 6.24449 16.1366 5.8905 15.7664C5.78324 15.6553 5.62124 15.6225 5.48174 15.6819C5.3415 15.7422 5.24999 15.8854 5.24999 16.0435C5.24999 16.6907 4.74525 17.2174 4.12499 17.2174H1.87499C1.25473 17.2174 0.749988 16.6907 0.749988 16.0435V9.7826C0.749988 9.13537 1.25473 8.60868 1.87499 8.60868H5.24999V9C5.24999 9.1354 5.31749 9.26138 5.42848 9.33339C5.53799 9.40225 5.67598 9.40929 5.79298 9.34983L6.54296 8.95851C6.61873 8.91937 6.67948 8.85363 6.71548 8.77303L8.96548 3.68606C8.98798 3.6344 8.99996 3.57805 8.99996 3.52171V0.994672C9.15599 0.904685 9.42676 0.782597 9.74999 0.782597C10.161 0.782597 11.25 1.84851 11.25 3.13043C11.25 4.50783 10.5315 6.49329 10.5248 6.51288C10.4813 6.63262 10.4963 6.76802 10.566 6.87444C10.6365 6.9801 10.752 7.04349 10.875 7.04349H16.0357C16.6612 7.04349 17.1922 7.51071 17.2447 8.10705C17.2845 8.55314 17.079 8.97733 16.7108 9.21446C16.596 9.28801 16.5278 9.42107 16.533 9.56271C16.5382 9.70435 16.6163 9.83113 16.7362 9.8961C17.0535 10.0644 17.25 10.3962 17.25 10.7609C17.25 11.2547 16.8923 11.6695 16.4182 11.7266Z" fill="#2B2B2B"/></svg>';
  const db = firebase.firestore();
  const muestrame = document.getElementById("posts-publicaciones");
  db.collection("post")
    .get()
    .then((querySnapshot) => {
      querySnapshot.forEach((doc) => {
        const publicacion = doc.data();
        const avatar = `<img class="avatar posts-avatar" src="${coalesce(
          publicacion.img,
          "img/google.png"
        )}" width="50" />`;
        const titulo = `<h3>${coalesce(
          publicacion.nombre,
          publicacion.email
        )}</h3>`;
        const contenido = `<p>${publicacion.post}</p>`;
        const piePost = `<div class="pie-publicacion">${svgLike} ${coalesce(
          publicacion.likes,
          0
        )} ${svgComentario} ${
          publicacion.comentarios ? publicacion.comentarios.length : 0
        }</div>`;
        const htmlPublicacion = `<div class="tarjeta publicacion">${avatar}${titulo}${contenido}${piePost}</div>`;
        muestrame.innerHTML += htmlPublicacion;
      });
    });
};

//datos para el perfil
export const perfil = (inputPosts) => {
  const db = firebase.firestore();
  const usuario = () => firebase.auth().currentUser;
  const user = usuario();
  // Add a second document with a generated ID.
  db.collection("perfil")
    .add({
      nombre: user.displayName,
      photoURL: user.photoURL,
      //mbti:user.display.mbti,   me reclama que no la puede leer
      email: user.email,
      // ciudad:user.display.City,  me reclama que no la puede leer
      uid: user.uid,
    })
    .then(function (docRef) {
      console.log("Document written with ID: ", docRef.id);
    })
    .catch(function (error) {
      console.error("Error adding document: ", error);
    });
};

export const leemePerfil = () => {
  // const db = firebase.firestore();
  //db.collection("perfil").get().then((querySnapshot) => {
  //   querySnapshot.forEach((doc) => {
  const muestramePerfil = document.getElementById("perfil");

  firebase.auth().onAuthStateChanged(function (user) {
    if (!user) {
      console.log("no es usuario");
      return; // En caso de no ser usuario de la plataforma, sale de la función.
    }
    const photoURL = user.photoURL;
    const isAnonymous = user.isAnonymous;
    const uid = user.uid;
    const providerData = user.providerData;

    const svgCorreo =
      '<svg width="13" height="13" viewBox="0 0 13 13" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0)"><path d="M11.0972 1.90381C9.86947 0.676127 8.23719 0 6.50095 0C4.76471 0 3.13248 0.676127 1.90477 1.90381C0.677104 3.1315 0.000976562 4.76379 0.000976562 6.5C0.000976562 8.23621 0.677104 9.8685 1.90479 11.0962C3.13248 12.3239 4.76477 13 6.50098 13C7.57805 13 8.64516 12.731 9.58693 12.2221C9.77693 12.1194 9.84771 11.8822 9.74504 11.6922C9.64241 11.5022 9.40518 11.4314 9.21513 11.534C8.38717 11.9815 7.44863 12.2179 6.50098 12.2179C3.3481 12.2179 0.783033 9.65288 0.783033 6.5C0.783033 3.34712 3.3481 0.782082 6.50095 0.782082C9.65383 0.782082 12.2189 3.34714 12.2189 6.5C12.2189 7.2462 12.0376 8.13404 11.8749 8.46419C11.7307 8.75695 11.3219 9.16924 10.8649 9.16924C10.2733 9.16924 9.79201 8.68796 9.79201 8.09638V3.97323C9.79201 3.75728 9.61691 3.58219 9.40097 3.58219C9.18502 3.58219 9.00993 3.75725 9.00993 3.97323V4.37277C8.40578 3.6613 7.50528 3.20894 6.50095 3.20894C4.68628 3.20894 3.20989 4.68531 3.20989 6.5C3.20989 8.31467 4.68623 9.79106 6.50095 9.79106C7.5379 9.79106 8.4642 9.30886 9.06787 8.55705C9.27325 9.35774 10.001 9.9513 10.8649 9.9513C11.6192 9.9513 12.2969 9.37709 12.5764 8.80989C12.8145 8.32686 13.0009 7.31225 13.0009 6.50003C13.001 4.76379 12.3248 3.1315 11.0972 1.90381ZM6.50095 9.00898C5.11752 9.00898 3.99198 7.88346 3.99198 6.5C3.99198 5.11654 5.11749 3.99103 6.50095 3.99103C7.88441 3.99103 9.00993 5.11654 9.00993 6.5C9.00993 7.88346 7.88441 9.00898 6.50095 9.00898Z" fill="black"/></g><defs><clipPath id="clip0"><rect width="13" height="13" fill="white"/></clipPath></defs></svg>';
    const svgCiudad =
      '<svg width="14" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10.7188 6.9375C10.7768 6.9375 10.8324 6.91775 10.8734 6.88258C10.9145 6.84742 10.9375 6.79973 10.9375 6.75V6.5625C10.9375 6.51277 10.9145 6.46508 10.8734 6.42992C10.8324 6.39475 10.7768 6.375 10.7188 6.375C10.6607 6.375 10.6051 6.39475 10.5641 6.42992C10.523 6.46508 10.5 6.51277 10.5 6.5625V6.75C10.5 6.79973 10.523 6.84742 10.5641 6.88258C10.6051 6.91775 10.6607 6.9375 10.7188 6.9375Z" fill="black"/><path d="M9.84375 6.9375C9.90177 6.9375 9.95741 6.91775 9.99843 6.88258C10.0395 6.84742 10.0625 6.79973 10.0625 6.75V6.5625C10.0625 6.51277 10.0395 6.46508 9.99843 6.42992C9.95741 6.39475 9.90177 6.375 9.84375 6.375C9.78573 6.375 9.73009 6.39475 9.68907 6.42992C9.64805 6.46508 9.625 6.51277 9.625 6.5625V6.75C9.625 6.79973 9.64805 6.84742 9.68907 6.88258C9.73009 6.91775 9.78573 6.9375 9.84375 6.9375Z" fill="black"/><path d="M10.5641 7.36743C10.489 7.43162 10.3873 7.46767 10.2812 7.46767C10.1752 7.46767 10.0735 7.43162 9.9984 7.36743C9.95715 7.33328 9.90189 7.31438 9.84453 7.31481C9.78718 7.31523 9.73231 7.33495 9.69176 7.36972C9.6512 7.40448 9.62819 7.45151 9.62769 7.50067C9.6272 7.54983 9.64924 7.5972 9.68909 7.63256C9.84622 7.76705 10.0592 7.84259 10.2812 7.84259C10.5033 7.84259 10.7163 7.76705 10.8734 7.63256C10.9133 7.5972 10.9353 7.54983 10.9348 7.50067C10.9343 7.45151 10.9113 7.40448 10.8707 7.36972C10.8302 7.33495 10.7753 7.31523 10.718 7.31481C10.6606 7.31438 10.6053 7.33328 10.5641 7.36743Z" fill="black"/><path d="M12.0312 8.8125H11.375C11.317 8.8125 11.2613 8.79275 11.2203 8.75758C11.1793 8.72242 11.1562 8.67473 11.1562 8.625V8.38875C11.3585 8.26782 11.5238 8.10684 11.6381 7.91948C11.7523 7.73212 11.8121 7.52391 11.8125 7.3125C11.9864 7.31205 12.153 7.25265 12.2759 7.14726C12.3989 7.04186 12.4682 6.89905 12.4687 6.75V6.5625C12.4684 6.48384 12.4488 6.40612 12.4111 6.3344C12.3734 6.26268 12.3185 6.19857 12.25 6.14625V5.25C12.25 5.00136 12.1347 4.7629 11.9296 4.58709C11.7245 4.41127 11.4463 4.3125 11.1562 4.3125V4.02L11.4997 4.1775C11.6144 4.24348 11.748 4.28132 11.8861 4.28693C12.0241 4.29255 12.1613 4.26573 12.2828 4.20938C12.4013 4.15481 12.501 4.07453 12.5719 3.97655C12.6429 3.87858 12.6825 3.76635 12.687 3.65111C12.6914 3.53587 12.6604 3.42165 12.5972 3.31988C12.5339 3.21812 12.4406 3.13238 12.3265 3.07125L6.66748 0.3975C6.63517 0.382727 6.59911 0.375 6.56248 0.375C6.52586 0.375 6.4898 0.382727 6.45748 0.3975L0.783108 3.07875C0.672024 3.14154 0.581852 3.22796 0.521408 3.32957C0.460964 3.43118 0.432318 3.54449 0.43827 3.65843C0.444222 3.77237 0.484569 3.88304 0.555365 3.97961C0.626162 4.07618 0.724985 4.15535 0.842171 4.20938C0.955386 4.26083 1.08153 4.28786 1.20967 4.28813C1.3512 4.28922 1.48986 4.25395 1.6078 4.18687L1.96873 4.02V7.875H1.63842C1.54014 7.87496 1.44311 7.89385 1.35448 7.93026C1.26586 7.96668 1.18791 8.01968 1.12638 8.08538C1.06486 8.15107 1.02134 8.22777 0.999027 8.30981C0.976717 8.39185 0.976189 8.47714 0.997483 8.55938L1.67998 11.1844C1.71138 11.3095 1.79197 11.4215 1.90826 11.5017C2.02455 11.5819 2.16947 11.6255 2.31873 11.625H13.3437C13.4017 11.625 13.4574 11.6052 13.4984 11.5701C13.5394 11.5349 13.5625 11.4872 13.5625 11.4375V10.125C13.562 9.77703 13.4005 9.44342 13.1135 9.19736C12.8264 8.95131 12.4372 8.8129 12.0312 8.8125ZM11.27 9.17813C11.1466 9.29887 10.9946 9.39563 10.8241 9.46192C10.6536 9.52821 10.4685 9.5625 10.2812 9.5625C10.094 9.5625 9.90891 9.52821 9.73839 9.46192C9.56786 9.39563 9.41584 9.29887 9.29248 9.17813C9.44609 9.15717 9.58596 9.08998 9.68699 8.98861C9.78801 8.88723 9.84359 8.75832 9.84373 8.625V8.57063C10.1293 8.64312 10.4332 8.64312 10.7187 8.57063V8.625C10.7189 8.75832 10.7745 8.88723 10.8755 8.98861C10.9765 9.08998 11.1164 9.15717 11.27 9.17813ZM11.375 7.3125C11.375 7.56114 11.2597 7.7996 11.0546 7.97541C10.8495 8.15123 10.5713 8.25 10.2812 8.25C9.99115 8.25 9.71295 8.15123 9.50783 7.97541C9.30272 7.7996 9.18748 7.56114 9.18748 7.3125L9.20498 6C9.37742 5.99966 9.5474 5.965 9.70154 5.89875L9.84373 5.835L9.97061 5.89313C10.1275 5.96269 10.3015 5.99932 10.4781 6H11.375V7.3125ZM12.0312 6.5625V6.75C12.0312 6.79973 12.0082 6.84742 11.9672 6.88258C11.9261 6.91775 11.8705 6.9375 11.8125 6.9375V6.375C11.8705 6.375 11.9261 6.39475 11.9672 6.42992C12.0082 6.46508 12.0312 6.51277 12.0312 6.5625ZM11.8125 5.25V6C11.8121 5.90064 11.7659 5.80542 11.684 5.73516C11.602 5.6649 11.4909 5.6253 11.375 5.625H10.4781C10.3723 5.62459 10.2681 5.60275 10.174 5.56125L9.94655 5.45813C9.91545 5.44432 9.88094 5.43711 9.84592 5.43711C9.8109 5.43711 9.77639 5.44432 9.74529 5.45813L9.50248 5.56313C9.40505 5.60572 9.29683 5.62698 9.18748 5.625C9.07156 5.6253 8.96048 5.6649 8.87851 5.73516C8.79653 5.80542 8.75033 5.90064 8.74998 6V5.25C8.75033 5.15064 8.79653 5.05542 8.87851 4.98516C8.96048 4.9149 9.07156 4.8753 9.18748 4.875H9.40623C9.46425 4.875 9.51989 4.89475 9.56091 4.92992C9.60194 4.96508 9.62498 5.01277 9.62498 5.0625C9.62498 5.11223 9.64803 5.15992 9.68905 5.19508C9.73008 5.23025 9.78572 5.25 9.84373 5.25C9.90175 5.25 9.95739 5.23025 9.99841 5.19508C10.0394 5.15992 10.0625 5.11223 10.0625 5.0625V4.875C10.0625 4.82527 10.0855 4.77758 10.1266 4.74242C10.1676 4.70725 10.2232 4.6875 10.2812 4.6875H11.1562C11.3301 4.68795 11.4967 4.74735 11.6197 4.85274C11.7427 4.95814 11.812 5.10095 11.8125 5.25ZM1.38467 3.86625C1.33508 3.89449 1.27745 3.91063 1.21797 3.91295C1.15849 3.91526 1.09939 3.90365 1.04702 3.87938C0.994645 3.8551 0.950964 3.81907 0.920658 3.77514C0.890352 3.73121 0.874563 3.68104 0.874983 3.63C0.874209 3.5855 0.885927 3.54148 0.909149 3.50167C0.932372 3.46186 0.966419 3.42742 1.00842 3.40125L6.56248 0.77625L12.1012 3.39375C12.1489 3.42067 12.1877 3.45772 12.2137 3.5013C12.2397 3.54488 12.2521 3.5935 12.2497 3.64241C12.2473 3.69132 12.2301 3.73885 12.1999 3.78038C12.1696 3.82191 12.1274 3.85602 12.0772 3.87937C12.0213 3.90376 11.9588 3.91456 11.8963 3.91059C11.8338 3.90662 11.7738 3.88804 11.7228 3.85687L6.6653 1.5225C6.63377 1.50773 6.59841 1.49999 6.56248 1.49999C6.52655 1.49999 6.4912 1.50773 6.45967 1.5225L1.38467 3.86625ZM2.31873 11.25C2.26913 11.2503 2.22093 11.2359 2.18227 11.2092C2.14362 11.1826 2.11687 11.1453 2.10655 11.1038L1.42623 8.47875C1.41869 8.45122 1.41851 8.42258 1.42571 8.39498C1.43291 8.36738 1.44729 8.34153 1.4678 8.31938C1.48861 8.29784 1.51467 8.28047 1.54414 8.26849C1.57362 8.2565 1.6058 8.25019 1.63842 8.25H6.43123C6.48084 8.24972 6.52904 8.26411 6.56769 8.29076C6.60635 8.3174 6.6331 8.35466 6.64342 8.39625L7.3828 11.25H2.31873ZM7.3303 9.31875L7.06998 8.31562C7.03859 8.19054 6.95799 8.07851 6.8417 7.99829C6.72542 7.91807 6.5805 7.87455 6.43123 7.875H2.40623V3.90938C2.40574 3.88147 2.39828 3.85398 2.38436 3.82875L6.56248 1.90125L10.7187 3.8175V4.3125H10.2812C10.1709 4.31254 10.0623 4.33645 9.96554 4.382C9.8688 4.42756 9.78703 4.49329 9.7278 4.57312C9.62997 4.52495 9.51906 4.49973 9.40623 4.5H9.18748C8.95542 4.5 8.73286 4.57902 8.56876 4.71967C8.40467 4.86032 8.31248 5.05109 8.31248 5.25V6.14625C8.24395 6.19857 8.18905 6.26268 8.15136 6.3344C8.11367 6.40612 8.09403 6.48384 8.09373 6.5625V6.75C8.09425 6.89905 8.16356 7.04186 8.28652 7.14726C8.40948 7.25265 8.57609 7.31205 8.74998 7.3125C8.75033 7.52391 8.81016 7.73212 8.9244 7.91948C9.03865 8.10684 9.20393 8.26782 9.40623 8.38875V8.625C9.40623 8.67473 9.38319 8.72242 9.34216 8.75758C9.30114 8.79275 9.2455 8.8125 9.18748 8.8125H8.53123C8.29952 8.81402 8.07119 8.86033 7.86326 8.94798C7.65533 9.03563 7.47315 9.16237 7.3303 9.31875ZM8.74998 6.375V6.9375C8.69197 6.9375 8.63633 6.91775 8.5953 6.88258C8.55428 6.84742 8.53123 6.79973 8.53123 6.75V6.5625C8.53123 6.51277 8.55428 6.46508 8.5953 6.42992C8.63633 6.39475 8.69197 6.375 8.74998 6.375ZM9.62498 11.25H7.83123L7.73498 10.875H10.0625C10.0621 10.9744 10.0159 11.0696 9.93396 11.1398C9.85199 11.2101 9.74091 11.2497 9.62498 11.25ZM13.125 11.25H12.25V10.3125C12.25 10.2628 12.2269 10.2151 12.1859 10.1799C12.1449 10.1448 12.0892 10.125 12.0312 10.125C11.9732 10.125 11.9176 10.1448 11.8766 10.1799C11.8355 10.2151 11.8125 10.2628 11.8125 10.3125V11.25H10.3775C10.457 11.1368 10.4994 11.0072 10.5 10.875V10.6875C10.5 10.6378 10.4769 10.5901 10.4359 10.5549C10.3949 10.5198 10.3392 10.5 10.2812 10.5H7.63655L7.47686 9.88313C7.53957 9.68425 7.67668 9.50851 7.86714 9.38285C8.0576 9.2572 8.29089 9.18857 8.53123 9.1875H8.77186C8.92409 9.41539 9.14384 9.60477 9.40889 9.73648C9.67393 9.86818 9.97487 9.93755 10.2812 9.93755C10.5876 9.93755 10.8885 9.86818 11.1536 9.73648C11.4186 9.60477 11.6384 9.41539 11.7906 9.1875H12.0312C12.3213 9.1875 12.5995 9.28627 12.8046 9.46209C13.0097 9.6379 13.125 9.87636 13.125 10.125V11.25Z" fill="black"/><path d="M4.375 10.3125C4.24521 10.3125 4.11833 10.2795 4.01041 10.2177C3.90249 10.1559 3.81837 10.068 3.7687 9.96526C3.71903 9.86248 3.70604 9.74938 3.73136 9.64026C3.75668 9.53115 3.81918 9.43092 3.91096 9.35225C4.00274 9.27359 4.11967 9.22001 4.24697 9.19831C4.37427 9.1766 4.50622 9.18774 4.62614 9.23032C4.74605 9.27289 4.84854 9.34499 4.92065 9.43749C4.99276 9.52999 5.03125 9.63875 5.03125 9.75C5.03125 9.89918 4.96211 10.0423 4.83904 10.1477C4.71597 10.2532 4.54905 10.3125 4.375 10.3125ZM4.375 9.5625C4.33174 9.5625 4.28944 9.5735 4.25347 9.5941C4.2175 9.6147 4.18946 9.64399 4.1729 9.67825C4.15635 9.71251 4.15201 9.75021 4.16045 9.78658C4.16889 9.82295 4.18973 9.85636 4.22032 9.88258C4.25091 9.90881 4.28989 9.92666 4.33232 9.9339C4.37476 9.94113 4.41874 9.93742 4.45871 9.92323C4.49868 9.90904 4.53285 9.885 4.55688 9.85417C4.58092 9.82334 4.59375 9.78708 4.59375 9.75C4.59375 9.70027 4.5707 9.65258 4.52968 9.61742C4.48866 9.58225 4.43302 9.5625 4.375 9.5625Z" fill="black"/><path d="M3.5 6.75H4.73528L5.76341 7.45856C5.80204 7.48522 5.85009 7.49983 5.89969 7.5C5.9574 7.5 6.01278 7.48045 6.05375 7.44561C6.09472 7.41077 6.11797 7.36347 6.11844 7.314L6.12325 6.75H7C7.17405 6.75 7.34097 6.69074 7.46404 6.58525C7.58711 6.47976 7.65625 6.33668 7.65625 6.1875V4.3125C7.65625 4.16332 7.58711 4.02024 7.46404 3.91475C7.34097 3.80926 7.17405 3.75 7 3.75H3.5C3.32595 3.75 3.15903 3.80926 3.03596 3.91475C2.91289 4.02024 2.84375 4.16332 2.84375 4.3125V6.1875C2.84375 6.33668 2.91289 6.47976 3.03596 6.58525C3.15903 6.69074 3.32595 6.75 3.5 6.75ZM3.28125 4.3125C3.28125 4.26277 3.3043 4.21508 3.34532 4.17992C3.38634 4.14475 3.44198 4.125 3.5 4.125H7C7.05801 4.125 7.11365 4.14475 7.15468 4.17992C7.1957 4.21508 7.21875 4.26277 7.21875 4.3125V6.1875C7.21875 6.23723 7.1957 6.28492 7.15468 6.32008C7.11365 6.35525 7.05801 6.375 7 6.375H5.90625C5.84853 6.375 5.79316 6.39455 5.75218 6.42939C5.71121 6.46423 5.68796 6.51153 5.6875 6.561L5.68422 6.92325L4.94966 6.417C4.91088 6.38998 4.86247 6.37516 4.8125 6.375H3.5C3.44198 6.375 3.38634 6.35525 3.34532 6.32008C3.3043 6.28492 3.28125 6.23723 3.28125 6.1875V4.3125Z" fill="black"/><path d="M3.9375 4.875H4.15625C4.21427 4.875 4.26991 4.85525 4.31093 4.82008C4.35195 4.78492 4.375 4.73723 4.375 4.6875C4.375 4.63777 4.35195 4.59008 4.31093 4.55492C4.26991 4.51975 4.21427 4.5 4.15625 4.5H3.9375C3.87948 4.5 3.82384 4.51975 3.78282 4.55492C3.7418 4.59008 3.71875 4.63777 3.71875 4.6875C3.71875 4.73723 3.7418 4.78492 3.78282 4.82008C3.82384 4.85525 3.87948 4.875 3.9375 4.875Z" fill="black"/><path d="M4.8125 4.875H6.5625C6.62052 4.875 6.67616 4.85525 6.71718 4.82008C6.7582 4.78492 6.78125 4.73723 6.78125 4.6875C6.78125 4.63777 6.7582 4.59008 6.71718 4.55492C6.67616 4.51975 6.62052 4.5 6.5625 4.5H4.8125C4.75448 4.5 4.69884 4.51975 4.65782 4.55492C4.6168 4.59008 4.59375 4.63777 4.59375 4.6875C4.59375 4.73723 4.6168 4.78492 4.65782 4.82008C4.69884 4.85525 4.75448 4.875 4.8125 4.875Z" fill="black"/><path d="M4.8125 5.4375H6.5625C6.62052 5.4375 6.67616 5.41775 6.71718 5.38258C6.7582 5.34742 6.78125 5.29973 6.78125 5.25C6.78125 5.20027 6.7582 5.15258 6.71718 5.11742C6.67616 5.08225 6.62052 5.0625 6.5625 5.0625H4.8125C4.75448 5.0625 4.69884 5.08225 4.65782 5.11742C4.6168 5.15258 4.59375 5.20027 4.59375 5.25C4.59375 5.29973 4.6168 5.34742 4.65782 5.38258C4.69884 5.41775 4.75448 5.4375 4.8125 5.4375Z" fill="black"/><path d="M3.9375 5.4375H4.15625C4.21427 5.4375 4.26991 5.41775 4.31093 5.38258C4.35195 5.34742 4.375 5.29973 4.375 5.25C4.375 5.20027 4.35195 5.15258 4.31093 5.11742C4.26991 5.08225 4.21427 5.0625 4.15625 5.0625H3.9375C3.87948 5.0625 3.82384 5.08225 3.78282 5.11742C3.7418 5.15258 3.71875 5.20027 3.71875 5.25C3.71875 5.29973 3.7418 5.34742 3.78282 5.38258C3.82384 5.41775 3.87948 5.4375 3.9375 5.4375Z" fill="black"/><path d="M3.9375 6H4.15625C4.21427 6 4.26991 5.98025 4.31093 5.94508C4.35195 5.90992 4.375 5.86223 4.375 5.8125C4.375 5.76277 4.35195 5.71508 4.31093 5.67992C4.26991 5.64475 4.21427 5.625 4.15625 5.625H3.9375C3.87948 5.625 3.82384 5.64475 3.78282 5.67992C3.7418 5.71508 3.71875 5.76277 3.71875 5.8125C3.71875 5.86223 3.7418 5.90992 3.78282 5.94508C3.82384 5.98025 3.87948 6 3.9375 6Z" fill="black"/><path d="M4.8125 6H6.5625C6.62052 6 6.67616 5.98025 6.71718 5.94508C6.7582 5.90992 6.78125 5.86223 6.78125 5.8125C6.78125 5.76277 6.7582 5.71508 6.71718 5.67992C6.67616 5.64475 6.62052 5.625 6.5625 5.625H4.8125C4.75448 5.625 4.69884 5.64475 4.65782 5.67992C4.6168 5.71508 4.59375 5.76277 4.59375 5.8125C4.59375 5.86223 4.6168 5.90992 4.65782 5.94508C4.69884 5.98025 4.75448 6 4.8125 6Z" fill="black"/></svg>';
    const svgTrabajo =
      '<svg width="16" height="15" viewBox="0 0 16 15" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0)"><path d="M14.2806 3.1795V2.36733C14.2806 2.27018 14.2372 2.1813 14.169 2.11737C14.0999 2.0526 14.006 2.01275 13.9023 2.01275H13.1246C13.02 2.01275 12.9262 2.0526 12.8571 2.11737C12.7888 2.18133 12.7463 2.27018 12.7463 2.36733V3.17953H14.2806V3.1795ZM4.48322 7.12834C4.392 7.042 4.392 6.90328 4.48322 6.81773C4.57447 6.7314 4.72328 6.7314 4.81453 6.81773L5.02803 7.01789L5.62066 6.46148C5.71191 6.37594 5.86072 6.37594 5.95197 6.46148C6.04409 6.54785 6.04409 6.68654 5.95197 6.77291L5.19372 7.4838C5.10244 7.56934 4.95362 7.56934 4.86237 7.4838L4.48322 7.12834ZM13.2787 4.59296C13.2787 4.4717 13.3832 4.37288 13.5135 4.37288C13.6428 4.37288 13.7473 4.4717 13.7473 4.59296V9.20452C13.7473 9.32575 13.6428 9.4246 13.5135 9.4246C13.3832 9.4246 13.2787 9.32575 13.2787 9.20452V4.59296ZM9.58387 12.0273H11.026V11.0847H9.58387V12.0273ZM11.2599 12.4666C8.71222 12.4666 6.16362 12.4666 3.61597 12.4666C3.48662 12.4666 3.38122 12.3677 3.38122 12.2465V10.8646C3.38122 10.7433 3.48662 10.6454 3.61597 10.6454H5.29287V9.39302C5.29287 9.27179 5.39741 9.17382 5.52672 9.17382H7.43834C7.56769 9.17382 7.67222 9.27181 7.67222 9.39302V9.78334H9.34909C9.47844 9.78334 9.58384 9.88216 9.58384 10.0034V10.6454H11.2598C11.3892 10.6454 11.4946 10.7434 11.4946 10.8646V12.2465C11.4946 12.3677 11.3892 12.4666 11.2599 12.4666ZM7.67225 12.0273H9.11441V10.2235H7.67225V12.0273ZM5.7615 12.0273H7.20362V10.0034V9.61312H5.7615V12.0273ZM3.84984 12.0273H5.29291V11.0847H3.84984V12.0273ZM2.86125 4.37291H12.2768V3.39876V2.36733C12.2768 2.14892 12.3725 1.95047 12.5257 1.80676C12.679 1.66309 12.8907 1.57339 13.1246 1.57339H13.9023C14.1353 1.57339 14.347 1.66309 14.5003 1.80676C14.6535 1.95044 14.7492 2.14892 14.7492 2.36733V3.39876V4.37291H15.7661C15.8955 4.37291 16 4.47173 16 4.59299V13.2073C16 13.3286 15.8954 13.4266 15.7661 13.4266H9.27737C9.14803 13.4266 9.04353 13.3286 9.04353 13.2073C9.04353 13.0861 9.14806 12.9872 9.27737 12.9872H15.5314V4.81221H14.7492V6.4009C14.7492 6.52216 14.6438 6.62098 14.5145 6.62098C14.3851 6.62098 14.2806 6.52216 14.2806 6.4009V4.59299V3.61887H12.7463V4.59299V10.1787H14.2806V7.39661C14.2806 7.27535 14.3851 7.17653 14.5145 7.17653C14.6438 7.17653 14.7492 7.27535 14.7492 7.39661V10.3979C14.7492 10.451 14.7342 10.4776 14.7093 10.5225L13.7225 12.3445C13.7004 12.3852 13.665 12.4201 13.618 12.4425C13.5028 12.4973 13.3629 12.4533 13.3044 12.3454L12.314 10.5183C12.291 10.4743 12.2768 10.4494 12.2768 10.3979V4.81221H2.86125V6.47478C2.86125 6.59604 2.75672 6.69489 2.62737 6.69489C2.49803 6.69489 2.39262 6.59604 2.39262 6.47478V4.59299V2.19044C2.19153 2.07255 1.96478 2.01275 1.72737 2.01275C1.38012 2.01275 1.06566 2.14479 0.837094 2.35822C0.609437 2.57247 0.468562 2.86728 0.468562 3.19283V10.6985C0.480969 10.6861 0.493375 10.6736 0.50575 10.662C0.818469 10.3688 1.25075 10.1878 1.72734 10.1878C1.91781 10.1878 2.10206 10.2177 2.27656 10.2717C2.31556 10.2841 2.35453 10.2983 2.39259 10.3132V7.47055C2.39259 7.3493 2.498 7.25048 2.62734 7.25048C2.75669 7.25048 2.86122 7.3493 2.86122 7.47055V10.6903C2.86122 10.7359 2.84528 10.7824 2.81337 10.8223C2.73631 10.9187 2.58925 10.9377 2.48562 10.8647C2.37844 10.7883 2.25706 10.7276 2.12775 10.6878C2.00375 10.6487 1.86909 10.6271 1.72737 10.6271C1.38012 10.6271 1.06566 10.7592 0.837094 10.9726C0.609437 11.186 0.468562 11.4817 0.468562 11.8072C0.468562 12.1336 0.609406 12.4284 0.837094 12.6418C1.06562 12.8553 1.38009 12.9873 1.72737 12.9873H8.21612C8.34547 12.9873 8.44997 13.0862 8.44997 13.2074C8.44997 13.3286 8.34544 13.4266 8.21612 13.4266H1.72737C1.25078 13.4266 0.8185 13.2456 0.505781 12.9524C0.193094 12.6593 0 12.2548 0 11.8072V3.1928C0 2.74599 0.193094 2.34073 0.505781 2.04759C0.8185 1.75441 1.25078 1.57336 1.72737 1.57336C2.09675 1.57336 2.45994 1.6863 2.75669 1.89228C2.81959 1.93213 2.86122 1.99939 2.86122 2.07583V4.37291H2.86125ZM14.1335 10.618H12.8925L13.5135 11.7632L14.1335 10.618ZM11.0012 5.70413C11.1306 5.70413 11.2351 5.80295 11.2351 5.92421C11.2351 6.04547 11.1305 6.14344 11.0012 6.14344H7.82903C7.69969 6.14344 7.59519 6.04544 7.59519 5.92421C7.59519 5.80295 7.69972 5.70413 7.82903 5.70413H11.0012ZM9.68222 7.80187C9.81244 7.80187 9.91697 7.89987 9.91697 8.0211C9.91697 8.14233 9.81244 8.24118 9.68222 8.24118H7.82906C7.69972 8.24118 7.59522 8.14236 7.59522 8.0211C7.59522 7.89984 7.69975 7.80187 7.82906 7.80187H9.68222ZM11.0012 6.75299C11.1306 6.75299 11.2351 6.85101 11.2351 6.97306C11.2351 7.09433 11.1305 7.19232 11.0012 7.19232H7.82903C7.69969 7.19232 7.59519 7.0943 7.59519 6.97306C7.59519 6.85101 7.69972 6.75299 7.82903 6.75299H11.0012ZM3.87553 5.49401H6.5605C6.68984 5.49401 6.79434 5.59283 6.79434 5.71409V8.23122C6.79434 8.35248 6.68981 8.4513 6.5605 8.4513H3.87553C3.74531 8.4513 3.64078 8.35248 3.64078 8.23122V5.71409C3.64078 5.59283 3.74531 5.49401 3.87553 5.49401ZM6.32578 5.93417H4.10941V8.01199H6.32578V5.93417Z" fill="black"/></g><defs><clipPath id="clip0"><rect width="16" height="15" fill="white"/></clipPath></defs></svg>';

    const divIdentificacion = `
      <div class="perfil-identificacion">
        <img class="avatar posts-avatar" src="${coalesce(
          user.img,
          "img/google.png"
        )}" width="50" />
        <h3>${user.displayName}</h3>
        <h4>${coalesce(user.mbti, "MBTI no definido!")}</h4>
      </div>`;

    const divSocialInformacion = `
      <div class="columna">
        <div class="perfil-social">
          <div class="perfil-seguidores"><h4>Seguidores</h4><p>${coalesce(
            user.seguidores,
            0
          )}</p></div>
          <div class="perfil-seguidos"><h4>Seguidos</h4><p>${coalesce(
            user.seguidos,
            0
          )}</p></div>
        </div>
        <div class="perfil-informacion">
          <p class="correo">${svgCorreo} ${user.email}</p>
          <p class="ciudad">${svgCiudad} ${coalesce(user.ciudad, "Sin información")}</p>
          <p class="trabajo">${svgTrabajo} ${coalesce(user.trabajo, "Sin información")}</p>
        </div>
      </div>`;

    muestramePerfil.innerHTML += divIdentificacion + divSocialInformacion;
  });
};
